# This is a basic workflow to help you get started with Actions

name: mapadore-get-repos

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
 
  workflow_dispatch:
    inputs:
      filename:
        default: repo.json
        required: true
        description: please provide json filename

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  get-repos:
    # The type of runner that the job will run on
    runs-on: [windows-latest]
    env:
      GITHUB_TOKEN: ${{secrets.PAT_TOKEN}}
      GITHUB_USER: rahulmalewadi
      FILE: ${{github.event.inputs.filename}}
      DIR: rahulmalewadi
      

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
          

     
      - name: get-repo
        
        run: |
          echo "---------------------------------------------"
          echo "--------powered by github actions------------"
          echo "---------------------------------------------"
          mkdir ${{env.DIR}}
          mkdir ${{env.DIR}}/develop
          mkdir ${{env.DIR}}/release
          mkdir ${{env.DIR}}/master
          $myjson = Get-Content -Path ".\${{env.FILE}}" | ConvertFrom-Json
          cd ${{env.DIR}}
          echo "repositories defined in the file are:"
          echo "$myjson.repo"
          foreach ($rep in $myjson.Githubrepo) {
          echo $rep
          foreach ($branch in $myjson.branches) {
          if ($branch -like 'develop') {
          cd $branch
          git clone --depth 1 -b $branch https://${{env.GITHUB_TOKEN}}@github.com/${{env.GITHUB_USER}}/$rep.git
          echo $pwd
          cd ..
          continue
          }elseif ($branch -like 'release'){
          cd $branch
          git clone --depth 1 -b $branch https://${{env.GITHUB_TOKEN}}@github.com/${{env.GITHUB_USER}}/$rep.git
          echo $pwd
          cd ..
          continue
          }elseif($branch -like 'master'){
          cd $branch
          git clone --depth 1 -b $branch https://${{env.GITHUB_TOKEN}}@github.com/${{env.GITHUB_USER}}/$rep.git
          echo $pwd
          cd ..
          break
  
          }
          echo "done cloning repositories"
          }
          }
          cd ..
          echo $pwd
          
      
          
        shell: powershell

      # Runs a set of commands using the runners shell
      - name: upload repos as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: repos
          path: ${{env.DIR}}
  jobs:
    name: deploy-sftp
    needs: [get-repos]
    runs-on: [ubuntu-latest]
    env:
      DIR: repositories
    steps:
      - name: download artifact
        uses: actions/download-artifact@v2
        with:
          name: repos
          path: ${{env.DIR}}
      - name: sftp-deploy
        run: |
           printf "%s" "${{env.ssh_private_key}}" >> ${{env.mykey}}
           chmod 600 ${{env.mykey}}
           #sftp -o StrictHostKeyChecking=no -i ${{env.mykey}} ec2-user@44.202.70.126
           echo 'sftp start'
           
           
           sftp -b put -r repos /home/ec2-user -o StrictHostKeyChecking=no -i ${{env.mykey}} ec2-user@54.242.105.57
           
        env:
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          mykey: ../private_key.pem
          temp_sftp_file: put -r repositories
     
    

       
